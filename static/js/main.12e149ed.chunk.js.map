{"version":3,"sources":["images/logo.jpg","components/auth/auth.js","components/auth/protectedRoute.js","components/auth/404.js","components/borrow/requestData.js","actions/requestAction.js","actions/types.js","components/borrow/borrowModal.js","components/transaction/TransactionData.js","actions/transactionAction.js","components/transaction/transactModal.js","components/dashboard.js","common/layout.js","common/walletLogo.js","components/loginForm.js","components/registerForm.js","actions/userAction.js","reducers/requestReducer.js","reducers/transactionReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","this","authenticated","cb","ProtectedRoute","Component","component","rest","render","props","auth","isAuthenticated","to","pathname","state","from","location","Page404","status","title","subTitle","extra","type","onClick","history","push","RequestData","columns","dataIndex","key","text","tags","map","tag","color","toUpperCase","record","handleDelete","id","fetchRequests","nextProps","console","log","newRequest","requests","unshift","deleteRequest","notification","open","message","description","icon","style","data2","pagination","pageSize","dataSource","rowKey","prototypes","PropTypes","func","isRequired","array","object","connect","items","item","dispatch","fetch","then","response","json","payload","method","marks","1","2","3","4","5","6","7","8","9","10","11","12","label","Borrow","showModal","setState","visible","handleOk","e","amount","months","borrowDetails","date","requestLoan","confirmLoading","setTimeout","success","info","handleCancel","ModalText","moment","Date","format","handleChange","bind","handleChangeMonths","m","onOk","onCancel","width","defaultValue","formatter","value","replace","parser","onChange","name","min","max","borrowData","headers","body","JSON","stringify","request","TransactionData","fetchTransactions","newTransaction","transactions","data","Option","Select","Transact","mode","transactionDetails","createTransaction","handleSelectChange","unit","transaction","TabPane","Tabs","extraContent","display","justifyContent","marginRight","prefix","Content","children","className","TopHeader","footer","defaultActiveKey","tab","column","size","Item","renderContent","Header","Layout","Sider","SiderDemo","collapsed","toggle","logOut","logout","Alert","trigger","collapsible","theme","defaultSelectedKeys","background","padding","float","margin","minHeight","Logo","src","logo","loginForm","handleSubmit","preventDefault","form","validateFields","err","values","login","getFieldDecorator","onSubmit","rules","required","placeholder","valuePropName","initialValue","href","htmlType","WrappedNormalLoginForm","Form","create","residences","RegistrationForm","confirmDirty","handleConfirmBlur","target","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","validateFieldsAndScroll","register","tailFormItemLayout","wrapperCol","xs","span","offset","sm","prefixSelector","labelCol","hasFeedback","validator","Password","onBlur","options","addonBefore","WrappedRegistrationForm","newUser","userDetails","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","exact","path","LogInForm","RegisterForm","LayoutPanel","stack","limit","timeout","position","effect","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12e149ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a3a974aa.jpg\";","class Auth {\r\n    constructor() {\r\n\r\n        this.authenticated = false;\r\n    }\r\n    login(cb) {\r\n        this.authenticated = true;\r\n        cb();\r\n\r\n    }\r\nlogout(cb){\r\n    this.authenticated = false;\r\n    cb();\r\n}\r\nisAuthenticated(){\r\n\r\n    return this.authenticated;\r\n}\r\n\r\n}\r\nexport default new Auth();","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport auth from './auth'\r\n\r\nexport const ProtectedRoute = ({ component: Component }, ...rest) => {\r\n\r\n\r\n    return (<Route {...rest} render={\r\n        (props) => {\r\n            if (auth.isAuthenticated()) {\r\n                return <Component {...props} />\r\n            } else {\r\n                return(\r\n                <Redirect to={\r\n\r\n                    {\r\n                        pathname: '/login',\r\n                        state: {\r\n                            from: props.location\r\n                        }\r\n                    }\r\n                } />\r\n                )\r\n            }\r\n\r\n        }\r\n    } />\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { Result, Button } from 'antd';\r\n\r\nexport const Page404 = (props) => {\r\n\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Button type=\"primary\" onClick={()=>{\r\n\r\n                props.history.push('/login')\r\n            }}>Back Home</Button>}\r\n        />\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Table, Tag, notification, Icon } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchRequests, deleteRequest } from '../../actions/requestAction';\r\n\r\n\r\nclass RequestData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: 'Requested Date',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        render: text => <a>{text}</a>,\r\n      },\r\n      {\r\n        title: 'Type',\r\n        dataIndex: 'type',\r\n        key: 'type',\r\n      },\r\n      {\r\n        title: 'Amount',\r\n        dataIndex: 'amount',\r\n        key: 'amount',\r\n      },\r\n      {\r\n        title: 'LP',\r\n        key: 'months',\r\n        dataIndex: 'months',\r\n      },\r\n      {\r\n        title: 'Status',\r\n        key: 'status',\r\n        dataIndex: 'status',\r\n        render: tags => (\r\n          <span>\r\n            {tags.map(tag => {\r\n              let color;\r\n              if (tag === 'rejected') {\r\n                color = 'volcano';\r\n              }\r\n              if (tag === 'pending') {\r\n                color = 'geekblue';\r\n              }\r\n              if (tag === 'accepted') {\r\n                color = 'purple';\r\n              }\r\n              if (tag === 'approved') {\r\n                color = 'green';\r\n              }\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (text, record) => (\r\n\r\n\r\n          <span>\r\n\r\n            <a\r\n              onClick={() => { this.handleDelete(record.id) }}>\r\n                Delete</a>\r\n\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n\r\n\r\n\r\n  }\r\n  componentWillMount() {\r\n\r\n    this.props.fetchRequests();\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps);\r\n    if (nextProps.newRequest) {\r\n      this.props.requests.unshift(nextProps.newRequest)\r\n\r\n    }\r\n\r\n  }\r\n\r\n  handleDelete(id) {\r\n    this.props.deleteRequest(id);\r\n    notification.open({\r\n      message: 'Delete Successful',\r\n      description:\r\n        '',\r\n      icon: <Icon type=\"smile\" style={{ color: '#108ee9' }} />,\r\n    });\r\n\r\n    console.log(id)\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const data2 = this.props.requests\r\n    console.log(data2)\r\n    return (\r\n\r\n\r\n      <Table  pagination={{ pageSize: 3 }} columns={this.columns} dataSource={data2} rowKey='id' />\r\n    )\r\n  }\r\n}\r\n\r\nRequestData.prototypes = {\r\n\r\n  fetchRequests: PropTypes.func.isRequired,\r\n  requests: PropTypes.array.isRequired,\r\n  newRequest: PropTypes.object.isRequired\r\n}\r\n\r\nconst MapStateToProp = state => ({\r\n\r\n  requests: state.requests.items,\r\n  newRequest: state.requests.item\r\n\r\n});\r\n\r\nexport default connect(MapStateToProp, { fetchRequests, deleteRequest })(RequestData)\r\n\r\n// export const RequestTableData = () => {\r\n//   return (\r\n//     <Table columns={columns} dataSource={data} />\r\n//   );\r\n\r\n// }\r\n\r\n","import { FETCH_REQUESTS, BORROW, DELETE_REQUEST } from './types';\r\n\r\n\r\nexport const fetchRequests = () => dispatch => {\r\n\r\n    fetch('http://localhost:4000/requests?_sort=id&_order=desc')\r\n    .then(response => response.json())\r\n    .then(requests => dispatch({\r\n        \r\n        type: FETCH_REQUESTS,\r\n        payload: requests\r\n\r\n    }))\r\n\r\n}\r\n\r\n\r\nexport const requestLoan = borrowData => dispatch => {\r\n\r\n    fetch('http://localhost:4000/requests', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(borrowData)\r\n\r\n\r\n    })\r\n    .then(response => response.json())\r\n    .then(request => dispatch({\r\n\r\n        type: BORROW,\r\n        payload: request\r\n    }) )\r\n}\r\n\r\nexport const deleteRequest = id => dispatch => {\r\n\r\n    fetch('http://localhost:4000/requests/'+id,{\r\n\r\n    method: 'DELETE'\r\n    })\r\n    .then(response  => response.json())\r\n    .then(response => dispatch({\r\n            type: DELETE_REQUEST,\r\n            payload: id\r\n\r\n\r\n    }))\r\n}","export const LOGIN_USER = 'LOGIN_USER'\r\nexport const REGISTER_USER = 'REGISTER_USER'\r\nexport const BORROW = 'BORROW'\r\nexport const FETCH_REQUESTS = 'FETCH_REQUESTS'\r\nexport const DELETE_REQUEST = 'DELETE_REQUEST'\r\nexport const FETCH_TRANSACTION = 'FETCH_TRANSACTION'\r\nexport const NEW_TRANSACTION = 'NEW_TRANSACTION'","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, Button, InputNumber, Slider, message } from 'antd';\r\nimport moment from 'moment';\r\nimport {requestLoan} from '../../actions/requestAction';\r\n\r\nconst marks = {\r\n    1: '1',\r\n    2: '2',\r\n    3: '3',\r\n    4: '4',\r\n    5: '5',\r\n    6: '6',\r\n    7: '7',\r\n    8: '8',\r\n    9: '9',\r\n    10: '10',\r\n    11: '11',\r\n    12: {\r\n        style: {\r\n            color: '#3C33FF',\r\n        },\r\n        label: <strong>12 Months</strong>,\r\n    },\r\n};\r\n\r\nclass Borrow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ModalText: 'Content of the modal',\r\n            visible: false,\r\n            confirmLoading: false,\r\n            amount: '',\r\n            months: '',\r\n            date: moment(new Date()).format('DD-MM-YY')\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeMonths = this.handleChangeMonths.bind(this);\r\n    }\r\n   \r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = (e) => {\r\n        if(this.state.amount&&this.state.months)\r\n        {\r\n    \r\n        const borrowDetails = {\r\n        amount: this.state.amount,\r\n        months: this.state.months,\r\n        date: this.state.date,\r\n        status: [\"pending\"],\r\n        type: \"LOAN\"\r\n        }\r\n        this.props.requestLoan(borrowDetails);\r\n        console.log(borrowDetails);\r\n\r\n        this.setState({\r\n            confirmLoading: true,\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                visible: false,\r\n                confirmLoading: false,\r\n                amount:'',\r\n                months:''\r\n\r\n            });\r\n        });\r\n         message.success('Loan Request Successful', 3);\r\n\r\n    }else{\r\n        message.info('Please apply correctly', 3);\r\n        return;\r\n    }\r\n        \r\n    };\r\n\r\n    handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    handleChange(e) {\r\n        console.log(e);\r\n        this.setState({ amount: e });\r\n\r\n    }\r\n    handleChangeMonths(m) {\r\n        console.log(m);\r\n        this.setState({ months: m });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Button onClick={this.showModal}>\r\n                    Borrow\r\n        </Button>\r\n                <Modal\r\n                    title=\"How Much?\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    confirmLoading={this.state.confirmLoading}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <div>\r\n                        <h3>Amount:</h3>\r\n                        <InputNumber\r\n                            style={{ width: 200 }}\r\n                            defaultValue={1000}\r\n                            formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                            onChange={this.handleChange}\r\n                            name=\"amount\"\r\n                            value={this.state.amount}\r\n\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h3>Period:</h3>\r\n\r\n                        <Slider marks={marks} min={1} max={12} name=\"months\" value={this.state.months?this.state.months:0} onChange={this.handleChangeMonths} />\r\n                    </div>\r\n                    \r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null,{ requestLoan })(Borrow);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Table, Tag, notification, Icon } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchTransactions } from '../../actions/transactionAction';\r\n\r\n\r\nclass TransactionData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: 'Date',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        render: text => <a>{text}</a>,\r\n      },\r\n      {\r\n        title: 'Type',\r\n        dataIndex: 'type',\r\n        key: 'type',\r\n        render: tags => (\r\n          <span>\r\n            {tags.map(tag => {\r\n              let color;\r\n              if (tag === 'depo') {\r\n                color = 'volcano';\r\n              }\r\n              if (tag === 'trans') {\r\n                color = 'geekblue';\r\n              }\r\n              if (tag === 'deposit') {\r\n                color = 'purple';\r\n              }\r\n              if (tag === 'transfer') {\r\n                color = 'green';\r\n              }\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: 'Amount',\r\n        dataIndex: 'amount',\r\n        key: 'amount',\r\n      },\r\n      {\r\n        title: 'Mode',\r\n        key: 'mode',\r\n        dataIndex: 'mode',\r\n        render: tags => (\r\n          <span>\r\n            {tags.map(tag => {\r\n              let color;\r\n              if (tag === 'card') {\r\n                color = 'volcano';\r\n              }\r\n              if (tag === 'mpesa') {\r\n                color = 'geekblue';\r\n              }\r\n              if (tag === 'airtel money') {\r\n                color = 'purple';\r\n              }\r\n              if (tag === 'tkash') {\r\n                color = 'green';\r\n              }\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        ),\r\n      },\r\n      \r\n    ];\r\n\r\n\r\n\r\n  }\r\n  componentWillMount() {\r\n\r\n    this.props.fetchTransactions();\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps);\r\n    if (nextProps.newTransaction) {\r\n      this.props.transactions.unshift(nextProps.newTransaction)\r\n\r\n    }\r\n\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n\r\n    const data = this.props.transactions\r\n    console.log(data)\r\n    return (\r\n\r\n\r\n      <Table  pagination={{ pageSize: 3 }} columns={this.columns}  dataSource={data} rowKey='id' />\r\n    )\r\n  }\r\n}\r\n\r\nTransactionData.prototypes = {\r\n\r\n  fetchTransactions: PropTypes.func.isRequired,\r\n  transactions: PropTypes.array.isRequired,\r\n  newTransaction: PropTypes.object.isRequired\r\n}\r\n\r\nconst MapStateToProp = state => ({\r\n\r\n  transactions: state.transactions.items,\r\n  newTransaction: state.transactions.item\r\n\r\n});\r\n\r\nexport default connect(MapStateToProp, { fetchTransactions })(TransactionData)\r\n\r\n\r\n\r\n","import { FETCH_TRANSACTION, NEW_TRANSACTION } from './types';\r\n\r\nexport const createTransaction = transaction => dispatch => {\r\n    fetch('http://localhost:4000/transactions', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(transaction)\r\n\r\n    })\r\n        .then(response => response.json())\r\n        .then(transaction => dispatch({\r\n\r\n            type: NEW_TRANSACTION,\r\n            payload: transaction\r\n\r\n        }));\r\n};\r\n\r\nexport const fetchTransactions = () => dispatch => {\r\n\r\n    fetch('http://localhost:4000/transactions')\r\n        .then(response => response.json())\r\n        .then(transactions => dispatch({\r\n\r\n            type: FETCH_TRANSACTION,\r\n            payload: transactions\r\n\r\n        }))\r\n\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, Button, InputNumber, Select, message } from 'antd';\r\nimport moment from 'moment';\r\nimport { createTransaction } from '../../actions/transactionAction'\r\n\r\nconst { Option } = Select;\r\n\r\nclass Transact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ModalText: 'Content of the modal',\r\n            visible: false,\r\n            confirmLoading: false,\r\n            amount: '',\r\n            mode: '',\r\n            date: moment(new Date()).format('DD-MM-YY')\r\n        };\r\n\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n\r\n    }\r\n\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = (e) => {\r\n        if (this.state.amount && this.state.mode) {\r\n\r\n            const transactionDetails = {\r\n                amount: this.state.amount,\r\n                date: this.state.date,\r\n                mode: [this.state.mode],\r\n                type: [\"deposit\"]\r\n            }\r\n            this.props.createTransaction(transactionDetails);\r\n            console.log(transactionDetails);\r\n\r\n            this.setState({\r\n                confirmLoading: true,\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    visible: false,\r\n                    confirmLoading: false,\r\n                    amount:'',\r\n                    mode:''\r\n                });\r\n            });\r\n            message.success('Transaction Successful', 3);\r\n\r\n        } else {\r\n            message.info('Please apply correctly', 3);\r\n            return;\r\n        }\r\n\r\n    };\r\n\r\n    handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    handleChange(unit) {\r\n\r\n        this.setState({ amount: unit });\r\n\r\n    }\r\n    handleSelectChange(value) {\r\n        this.setState({ mode: value });\r\n        \r\n      }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Button onClick={this.showModal}>\r\n                    Deposit\r\n        </Button>\r\n                <Modal\r\n                    title=\"How Much?\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    confirmLoading={this.state.confirmLoading}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <div>\r\n                        <h3>Amount:</h3>\r\n                        <InputNumber\r\n                            style={{ width: 200 }}\r\n                            defaultValue={1000}\r\n                            formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                            onChange={this.handleChange}\r\n                            name=\"amount\"\r\n                            value={this.state.amount}\r\n\r\n                        />\r\n                        <h3>Mode:</h3>\r\n                        <Select defaultValue=\"mpesa\" style={{ width: 120 }} onChange={this.handleSelectChange}>\r\n                            <Option value=\"mpesa\">Mpesa</Option>\r\n                            <Option value=\"card\">Card</Option>\r\n                            <Option value=\"tkash\">TKash</Option>\r\n                            <Option value=\"airtel money\">Airtel Money</Option>\r\n                        </Select>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { createTransaction })(Transact);\r\n","import React, { Component } from 'react'\r\nimport { PageHeader, Tabs, Button, Statistic, Descriptions } from 'antd';\r\nimport RequestData from './borrow/requestData';\r\nimport Borrow from './borrow/borrowModal'\r\nimport TransactionData from './transaction/TransactionData'\r\nimport TransactionModal from './transaction/transactModal'\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst renderContent = (column = 2) => (\r\n    <Descriptions size=\"small\" column={column}>\r\n        <Descriptions.Item label=\"Account Name\">Sir. BankAlot</Descriptions.Item>\r\n        <Descriptions.Item label=\"Account No:\">\r\n            <a>421421</a>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Creation Time\">2019-09-17</Descriptions.Item>\r\n        <Descriptions.Item label=\"Effective Time\">2019-09-17</Descriptions.Item>\r\n        <Descriptions.Item label=\"Account Type\">\r\n            Primary Account\r\n    </Descriptions.Item>\r\n    </Descriptions>\r\n);\r\n\r\nconst extraContent = (\r\n    <div\r\n        style={{\r\n            display: 'flex',\r\n            width: 'max-content',\r\n            justifyContent: 'flex-end',\r\n        }}\r\n    >\r\n        <Statistic\r\n            title=\"Status\"\r\n            value=\"Active\"\r\n            style={{\r\n                marginRight: 32,\r\n            }}\r\n        />\r\n        <Statistic title=\"Balance\" prefix=\"KES\" value={60000} />\r\n    </div>\r\n);\r\n\r\nconst Content = ({ children, extra }) => {\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"main\">{children}</div>\r\n            <div className=\"extra\">{extra}</div>\r\n        </div>\r\n    );\r\n};\r\nexport default class TopHeader extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PageHeader\r\n                    // onBack={() => window.history.back()}\r\n                    title=\"Wallet \"\r\n                    subTitle=\"TM\"\r\n                    extra={[\r\n                        <Borrow key=\"3\" />,\r\n                        <TransactionModal key=\"2\"/>,\r\n                        <Button key=\"1\" type=\"primary\">\r\n                            Transfer\r\n              </Button>,\r\n                    ]}\r\n                    footer={\r\n                        <Tabs defaultActiveKey=\"1\">\r\n                            <TabPane tab=\"Transactions\" key=\"1\" >\r\n                                <TransactionData />\r\n                            </TabPane>\r\n                            <TabPane tab=\"Requests\" key=\"2\" >\r\n                                <RequestData />\r\n                                </TabPane>\r\n                        </Tabs>\r\n                    }\r\n                >\r\n                    <Content extra={extraContent}>{renderContent()}</Content>\r\n                </PageHeader>\r\n        \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TopHeader from '../components/dashboard'\r\nimport auth from '../components/auth/auth';\r\nimport Alert from 'react-s-alert';\r\n\r\nimport { Layout, Menu, Icon, Button } from 'antd';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nclass SiderDemo extends Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n  logOut = () =>{\r\n\r\n    auth.logout(()=>{\r\n      Alert.success(\"You're safely logged out!\");\r\n        this.props.history.push('/login')\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n          <div className=\"menu-logo\">\r\n          <Icon type=\"wallet\" theme=\"twoTone\" className=\"menu-header-logo\"/>\r\n            {/* <img src={logo} className=\"menu-header-logo\" alt=\"logo\"/> */}\r\n            <h1 className=\"menu-header\" >My Wallet</h1>\r\n            </div> \r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n            <Menu.Item key=\"1\">\r\n              <Icon type=\"user\" />\r\n              <span>Dashboard</span>\r\n            </Menu.Item>\r\n\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Header style={{ background: '#fff', padding: 0 }}>\r\n            <Icon\r\n              className=\"trigger\"\r\n              type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n              onClick={this.toggle}\r\n            />\r\n            <Button\r\n              type=\"danger\"\r\n              icon=\"poweroff\"\r\n              style={{float:\"right\"}}\r\n              onClick={this.logOut}\r\n            >\r\n            \r\n        </Button>\r\n          </Header>\r\n          <Content\r\n            style={{\r\n              margin: '24px 16px',\r\n              padding: 24,\r\n              background: '#fff',\r\n              minHeight: 280,\r\n            }}\r\n          >\r\n            <TopHeader />\r\n\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null)(SiderDemo)\r\n\r\n","\r\nimport React from 'react';\r\nimport logo from '../images/logo.jpg'\r\nexport const Logo = () => {\r\n    return (\r\n        <header className=\"App-header2\">\r\n            <img className=\"App-logo\" src={logo} />\r\n\r\n        </header>\r\n\r\n    )\r\n}","import { Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport React, { Component } from 'react'\r\nimport { Logo } from '../common/walletLogo';\r\nimport auth from './auth/auth';\r\nimport Alert from 'react-s-alert';\r\n\r\n\r\n\r\nclass loginForm extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        auth.login(() => {\r\n          Alert.success(\"You're successfully logged in!\");\r\n          this.props.history.push(\"/dashboard\");\r\n        })\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <Logo />\r\n\r\n        <Form.Item>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Username\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('remember', {\r\n            valuePropName: 'checked',\r\n            initialValue: true,\r\n          })(<Checkbox>Remember me</Checkbox>)}\r\n          <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Log in\r\n          </Button>\r\n          Or <a href=\"/register\">register now!</a>\r\n        </Form.Item>  \r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(loginForm);\r\n\r\nexport default WrappedNormalLoginForm;","import {\r\n    Form,\r\n    Input,\r\n    Cascader,\r\n    Select,\r\n   \r\n    Checkbox,\r\n    Button,\r\n   \r\n} from 'antd';\r\nimport React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {register} from '../actions/userAction';\r\nimport {Logo} from '../common/walletLogo';\r\nimport Alert from 'react-s-alert';\r\n\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst residences = [\r\n    {\r\n        value: 'Kenya',\r\n        label: 'Kenya',\r\n        children: [\r\n            {\r\n                value: 'Nairobi',\r\n                label: 'Nairobi',\r\n                children: [\r\n                    {\r\n                        value: 'Westlands',\r\n                        label: 'Westlands',\r\n                    },\r\n                    {\r\n                        value: 'CBD',\r\n                        label: 'CBD',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        value: 'Uganda',\r\n        label: 'Uganda',\r\n        children: [\r\n            {\r\n                value: 'Kampala',\r\n                label: 'Kampala',\r\n                children: [\r\n                    {\r\n                        value: 'Northern',\r\n                        label: 'Northern',\r\n                    },\r\n                    {\r\n                        value: 'Eastern',\r\n                        label: 'Eastern',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nclass RegistrationForm extends Component {\r\n\r\n    \r\n    state = {\r\n        confirmDirty: false,\r\n       \r\n    };\r\n\r\n   \r\n\r\n    handleConfirmBlur = e => {\r\n        const { value } = e.target;\r\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n    };\r\n\r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const { form } = this.props;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('Two passwords that you enter is inconsistent!');\r\n        } else {\r\n            callback();\r\n        }\r\n    };\r\n\r\n    validateToNextPassword = (rule, value, callback) => {\r\n        const { form } = this.props;\r\n        if (value && this.state.confirmDirty) {\r\n            form.validateFields(['confirm'], { force: true });\r\n        }\r\n        callback();\r\n    };\r\n\r\n        //To handle registration\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                this.props.register(values);\r\n                Alert.success(\"You're successfully registered. Please login to continue!\");\r\n                this.props.history.push('/login');\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n      \r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                    offset: 8,\r\n                },\r\n            },\r\n        };\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue: '254',\r\n        })(\r\n            <Select style={{ width: 70 }}>\r\n                <Option value=\"254\">+254</Option>\r\n                <Option value=\"256\">+256</Option>\r\n            </Select>,\r\n        );\r\n\r\n\r\n\r\n        return (\r\n            <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"register-form\">\r\n                <Logo/>\r\n                <Form.Item label=\"First Name\">\r\n                    {getFieldDecorator('firstName', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your First Name!',\r\n                            },\r\n                        ],\r\n                    })(<Input />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Last Name\">\r\n                    {getFieldDecorator('lastName', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Last Name!',\r\n                            },\r\n                        ],\r\n                    })(<Input />)}\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"E-mail\">\r\n                    {getFieldDecorator('email', {\r\n                        rules: [\r\n                            {\r\n                                type: 'email',\r\n                                message: 'The input is not valid E-mail!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your E-mail!',\r\n                            },\r\n                        ],\r\n                    })(<Input />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Password\" hasFeedback>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                            {\r\n                                validator: this.validateToNextPassword,\r\n                            },\r\n                        ],\r\n                    })(<Input.Password />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Confirm Password\" hasFeedback>\r\n                    {getFieldDecorator('confirm', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please confirm your password!',\r\n                            },\r\n                            {\r\n                                validator: this.compareToFirstPassword,\r\n                            },\r\n                        ],\r\n                    })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Residence \">\r\n                    {getFieldDecorator('residence', {\r\n                        initialValue: ['Kenya', 'Nairobi', 'CBD'],\r\n                        rules: [\r\n                            { type: 'array', required: true, message: 'Please select your habitual residence!' },\r\n                        ],\r\n                    })(<Cascader options={residences} />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Phone Number\">\r\n                    {getFieldDecorator('phone', {\r\n                        rules: [{ required: true, message: 'Please input your phone number!' }],\r\n                    })(<Input addonBefore={prefixSelector} style={{ width: '100%' }} />)}\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item {...tailFormItemLayout}>\r\n                    {getFieldDecorator('agreement', {\r\n                        valuePropName: 'checked',\r\n                    })(\r\n                        <Checkbox>\r\n                            I have read the <a href=\"\">agreement</a>\r\n                        </Checkbox>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Register\r\n            </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\n const WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\r\n\r\n// export default WrappedRegistrationForm;\r\n\r\nexport default connect(null,{register})(WrappedRegistrationForm);","import { LOGIN_USER, REGISTER_USER } from './types';\r\n\r\nexport const login = () => dispatch => {\r\n\r\n    fetch('http://localhost/4000/users')\r\n        .then(response => response.json())\r\n        .then(user => dispatch({\r\n\r\n            type: LOGIN_USER,\r\n            payload: user\r\n        }));\r\n\r\n}\r\n\r\nexport const register = newUser => dispatch => {\r\n    console.log(newUser);\r\n\r\n    fetch('http://localhost:4000/users', {\r\n\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newUser)\r\n    })\r\n        .then(response => response.json())\r\n        .then(userDetails => dispatch({\r\n            type: REGISTER_USER,\r\n            payload: userDetails\r\n\r\n        }))\r\n\r\n\r\n}","import { BORROW, FETCH_REQUESTS, DELETE_REQUEST } from '../actions/types';\r\n\r\nconst initialState = {\r\n    items: [],\r\n    item: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case BORROW:\r\n            return {\r\n                ...state,\r\n                item: action.payload\r\n            }\r\n        case FETCH_REQUESTS:\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n            case DELETE_REQUEST:\r\n                console.log(action.payload)\r\n                return{\r\n                 ...state,\r\n                 items: state.items.filter((data ) => data.id !== action.payload)\r\n                }\r\n\r\n        default:\r\n            return state;\r\n           \r\n    }\r\n\r\n\r\n}","import {FETCH_TRANSACTION,NEW_TRANSACTION} from '../actions/types';\r\n\r\nconst initialState = {\r\n\r\n    items: [],\r\n    item:{}\r\n    \r\n}\r\n\r\nexport default function (state=initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case NEW_TRANSACTION:\r\n           return{\r\n               ...state,\r\n               item: action.payload\r\n           }\r\n        case FETCH_TRANSACTION:\r\n            return{\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport requestReducer from './requestReducer';\r\nimport transactionReducer from './transactionReducer';\r\n\r\nexport default combineReducers({\r\n\r\n    requests: requestReducer,\r\n    transactions: transactionReducer\r\n\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { ProtectedRoute } from './components/auth/protectedRoute'\nimport { Page404 } from './components/auth/404'\n\nimport LayoutPanel from './common/layout'\nimport LogInForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\nimport store from './store';\nimport Alert from 'react-s-alert';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n         <Redirect exact from=\"/\" to=\"/login\" />\n\n          <Switch>\n            <Route exact path=\"/login\" component={LogInForm} />\n            <Route exact path=\"/register\" component={RegisterForm} />\n            <ProtectedRoute exact path=\"/dashboard\" component={LayoutPanel} />\n            <Route path=\"*\" component={Page404} />\n            \n\n          </Switch>\n\n          <Alert stack={{ limit: 3 }}\n            timeout={3000}\n            position='top-right' effect='slide' offset={65} />\n\n\n\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}